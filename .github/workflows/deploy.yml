name: Continuous Deployment

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: us-east-1

jobs:

  build:
    uses: ./.github/workflows/docker.yml
    with:
      push: true
    secrets: inherit

  deployment:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Install Kustomize
        uses: syntaqx/setup-kustomize@v1
      -
        name: Set output vars
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: AWS CLI Version
        run: aws --version
      -
        name: Assert ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names ${{ github.event.repository.name }} || aws ecr create-repository --repository-name ${{ github.event.repository.name }}
      -
        name: Tag and push Docker Image to ECR
        id: ecr
        run: |
          ECR_IMAGE="${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}"
          docker pull ${{ needs.build.outputs.image }}
          docker tag ${{ needs.build.outputs.image }} $ECR_IMAGE
          docker push $ECR_IMAGE
          echo "image=$ECR_IMAGE" >> "$GITHUB_OUTPUT"
      -
        name: Update kubeconfig for EKS cluster
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
      -
        name: Build & Apply
        run: |
          (cd k8s/overlays/production && kustomize edit set image ${{ github.repository }}=${{ steps.ecr.outputs.image }})
          kustomize build k8s/overlays/production | kubectl apply -f -
